###### Disable general kernel drivers not used by LGE_msm8996
CONFIG_EFI=n
CONFIG_JBD=n
CONFIG_LOGO=n
CONFIG_ESOC=n
CONFIG_UID16=n
CONFIG_ATL1C=n
CONFIG_IMX134=n
CONFIG_IMX132=n
CONFIG_OV9724=n
CONFIG_OV5648=n
CONFIG_GC0339=n
CONFIG_OV8825=n
CONFIG_OV8865=n
CONFIG_s5k4e1=n
CONFIG_BT_BNEP=n
CONFIG_BT_HIDP=n
CONFIG_OV12830=n
CONFIG_BONDING=n
CONFIG_MODULES=n
CONFIG_WIL6210=n
CONFIG_VGA_ARB=n
CONFIG_MSM_MHI=n
CONFIG_MSM_11AD=n
CONFIG_MMC_TEST=n
CONFIG_RD_BZIP2=n
CONFIG_MSM_RDBG=n
CONFIG_ATH_CARDS=n
CONFIG_TRACER_PKT=n
CONFIG_SPI_SPIDEV=n
CONFIG_TI_DRV2667=n
CONFIG_SEEMP_CORE=n
CONFIG_PCI_QUIRKS=n
CONFIG_SCHEDSTATS=n
CONFIG_EEPROM_AT24=n
CONFIG_CHR_DEV_SCH=n
CONFIG_MEDIA_TUNER=n
CONFIG_CNSS_CRYPTO=n
CONFIG_USB_ISP1760=n
CONFIG_SECURE_TOUCH=n
CONFIG_IOSCHED_TEST=n
CONFIG_INPUT_MOUSEDEV=n
CONFIG_LIMITS_LITE_HW=n
CONFIG_SMB135X_CHARGER=n
CONFIG_LCD_CLASS_DEVICE=n
CONFIG_INPUT_HBTP_INPUT=n

# Disable general profiling, logging and debugging (RODATA configs are useful for hardening)
CONFIG_PROFILING=n
CONFIG_CORESIGHT=n
CONFIG_DEBUG_INFO=n
CONFIG_INPUT_EVBUG=n
CONFIG_IOMMU_DEBUG=n
CONFIG_CMA_DEBUGFS=n
CONFIG_IPC_LOGGING=n
CONFIG_SCSI_LOGGING=n
CONFIG_MSM_SMEM_LOGGING=n
CONFIG_MMC_PERF_PROFILING=n
CONFIG_RMNET_DATA_DEBUG_PKT=n
CONFIG_FB_MSM_MDSS_XLOG_DEBUG=n
CONFIG_MSM_RPM_RBCPR_STATS_V2_LOG=n
CONFIG_MSM_RPM_LOG=n
CONFIG_MSM_RPM_STATS_LOG=n

# Disable ALIGN_RODATA to reduce RAM usage without a measurable performance decrease
CONFIG_DEBUG_ALIGN_RODATA=n

# Android does not use ECRYPT_FS at all, neither for FBE or FDE
CONFIG_ECRYPT_FS=n

# Privileged Access Never (PAN) is only implemented on ArmV8.1 and beyond
CONFIG_ARM64_PAN=n

# We could emulate PAN though, but it's very expensive. According to kerneltoast,
# it considerably slows down memory accesses and syscalls run 2X faster by disabling it.
CONFIG_ARM64_SW_TTBR0_PAN=n

# Same goes for User Access Override (UAO)
CONFIG_ARM64_UAO=n

# IDLE_GOV_MENU is not needed since we already have qualcomm's cpu idle implementation
CONFIG_CPU_IDLE_GOV_MENU=n

# Android does not use RT_GROUP_SCHED as of late.
CONFIG_RT_GROUP_SCHED=n

# Disable support for obsolete libc system calls
CONFIG_SYSFS_SYSCALL=n

# This is not used by our devices
CONFIG_BACKLIGHT_GENERIC=n

# Disables automatic checking of kernel version
CONFIG_LOCALVERSION_AUTO=n

# This is used for KPTI, which has been disabled on msm8996 dtsi for a while
# due to performance regressions.
CONFIG_UNMAP_KERNEL_AT_EL0=n

# These errata are meant for ARM's Cortex-A5x cpus, let's not apply them on kryo
CONFIG_ARM64_ERRATUM_826319=n
CONFIG_ARM64_ERRATUM_827319=n
CONFIG_ARM64_ERRATUM_824069=n
CONFIG_ARM64_ERRATUM_819472=n
CONFIG_ARM64_ERRATUM_832075=n
CONFIG_ARM64_ERRATUM_845719=n
CONFIG_ARM64_ERRATUM_843419=n
CONFIG_ARM64_ERRATUM_1024718=n

# These, on the other hand, are meant for Cavium's ThunderX chips
CONFIG_CAVIUM_ERRATUM_22375=n
CONFIG_CAVIUM_ERRATUM_23154=n
CONFIG_CAVIUM_ERRATUM_27456=n

# Do not set a minimum amout of loop devices to be created
CONFIG_BLK_DEV_LOOP_MIN_COUNT=0

# We have no use for this fixture device
CONFIG_USB_EHSET_TEST_FIXTURE=n

# While it is nice to harden kryo against aliasing attacks,
# it has a performance impact and this old SoC has way bigger 
# security flaws than this.
CONFIG_HARDEN_BRANCH_PREDICTOR=n

# No need for AES through NEON when we already have ArmV8's 
# Crypto Extensions.
CONFIG_CRYPTO_AES_ARM64_NEON_BLK=n

# This should be disabled on production devices.
CONFIG_REGMAP_ALLOW_WRITE_DEBUGFS=n

# None of these touchscreen drivers are used by LGE_msm8996
CONFIG_TOUCHSCREEN_GEN_VKEYS=n
CONFIG_TOUCHSCREEN_ATMEL_MXT=n
CONFIG_TOUCHSCREEN_ATMEL_MAXTOUCH_TS=n
CONFIG_TOUCHSCREEN_SYNAPTICS_DSX_v21=n
CONFIG_TOUCHSCREEN_SYNAPTICS_DSX_v26=n

# Disable verity, we don't really need it
CONFIG_DM_VERITY=n

# ONLY WHEN KERNEL IS DEEMED STABLE: Disable frame pointers, kallsyms, tracing
# and kernel debug to maximize kernel performance (basically invert those below)
CONFIG_FRAME_POINTER=y
CONFIG_KALLSYMS=y
CONFIG_DEBUG_KERNEL=y
CONFIG_TRACING=y
CONFIG_DISABLE_TRACE_PRINTK=n



###### Enable stuff
CONFIG_PERF_EVENTS=y

# Enable AUDIT configs to harden security
CONFIG_AUDIT=y
CONFIG_AUDITSYSCALL=y
CONFIG_AUDIT_WATCH=y
CONFIG_AUDIT_TREE=y

# Jump label can improve performance in certain cases
CONFIG_JUMP_LABEL=y

# BPF_JIT improves performance whenever eBPF packet filter is in use
CONFIG_BPF_JIT=y

# This compresses the kernel with LZ4, leading to a bigger image, but faster boot
CONFIG_KERNEL_LZ4=y

# Adjust the log buffer to be closer to wahoo
CONFIG_LOG_BUF_SHIFT=20

# Skip sys_sync on suspend, the cost isn't worth it
CONFIG_SUSPEND_SKIP_SYNC=y

# Enable a system-wide ring of trusted keys
CONFIG_SYSTEM_TRUSTED_KEYRING=y

# Use qcom's CPUIDLE implementation
CONFIG_CPU_IDLE=y

# Use drivers useful for LGE_msm8996
CONFIG_THERMAL=y
CONFIG_THERMAL_EMULATION=n
CONFIG_THERMAL_QPNP=y
CONFIG_QCOM_THERMAL_LIMITS_DCVS=y
CONFIG_MSM_APP_API=y
CONFIG_ENABLE_FP_SIMD_SETTINGS=y
CONFIG_MSM_APP_SETTINGS=y
CONFIG_SENSORS_QPNP_ADC_CURRENT=y
CONFIG_VIDEOBUF2_VMALLOC=y
CONFIG_MSM_V4L2_VIDEO_OVERLAY_DEVICE=y
CONFIG_USB_HIDDEV=y
CONFIG_USB_MON=y
CONFIG_NOP_USB_XCEIV=y
CONFIG_QCOM_EARLY_RANDOM=y
CONFIG_SERIAL_MSM=y
CONFIG_COMPAT_BRK=y
CONFIG_REGULATOR_STUB=y

# Enable DEAD_CODE_ELIMINATION to reduce kernel size
CONFIG_LD_DEAD_CODE_DATA_ELIMINATION=y

# Enable Optimized Inlining compiler flag to better optimize
# function inlines with newer GCC toolchains
CONFIG_OPTIMIZE_INLINING=y

# Enable Ramoops Support while the kernel is still in debug phase
CONFIG_PSTORE=y
CONFIG_PSTORE_CONSOLE=y
CONFIG_PSTORE_PMSG=y
CONFIG_PSTORE_RAM=y

# Enable configs for zram support and faster de/compression
CONFIG_ZRAM=y
CONFIG_ZSMALLOC=y
CONFIG_CRYPTO_LZ4=y

# Enable USB fast charge (only works on Swan2000)
CONFIG_FORCE_FAST_CHARGE=y

# Enable KCAL Control
CONFIG_FB_MSM_MDSS_KCAL_CTRL=y

# Adjust TCP Algorithms to disable older algorithms and use westwood by default
CONFIG_TCP_CONG_BIC=n
CONFIG_TCP_CONG_HTCP=n
CONFIG_TCP_CONG_CUBIC=n
CONFIG_TCP_CONG_ADVANCED=y
CONFIG_TCP_CONG_WESTWOOD=y
CONFIG_DEFAULT_WESTWOOD=y

# Configurable Undervolting
# If neither is selected, kernel defaults to qcom's stock voltages
CONFIG_SWAN2K_UNDERVOLTS_UNSAFE=n
CONFIG_SWAN2K_UNDERVOLTS_SAFE=y

# Gaming Mode (basically overclocks CPU + GPU + DDR). Can be enabled alongside undervolts.
CONFIG_SWAN2K_GAMING_MODE=n



###### Enable Swan2000 kernel debugging, shouldn't be used in a stable/use-ready build.
#CONFIG_CMDLINE="ignore_loglevel print_fatal_signals=1 bootmem_debug sched_debug debug"
#CONFIG_CMDLINE_EXTEND=y
CONFIG_POWER_SUPPLY_DEBUG=n
CONFIG_SPI_DEBUG=n
CONFIG_REGULATOR_DEBUG=n
CONFIG_DEBUG_PINCTRL=n
CONFIG_I2C_DEBUG_CORE=n
CONFIG_HWMON_DEBUG_CHIP=n
CONFIG_DEBUG_GPIO=n
CONFIG_DEBUG_MSM_VIDC=n
CONFIG_DEBUG_KGSL=n
CONFIG_DEBUG_CLKSRC=n
CONFIG_DEBUG_EXTCON=n
CONFIG_DEBUG_HWMON=n
CONFIG_DEBUG_MFD=n
CONFIG_DEBUG_QCOM_PSY=n
CONFIG_DEBUG_SLIMBUS=n
CONFIG_DEBUG_SOC_QCOM=n
CONFIG_DEBUG_MEMSHARE=n
CONFIG_DEBUG_SPMI=n
CONFIG_DEBUG_USB=n
CONFIG_DEBUG_USB_HOST=n
CONFIG_DEBUG_SLIMPORT=n

# Lockup detection
CONFIG_LOCKUP_DETECTOR=n
CONFIG_HARDLOCKUP_DETECTOR_OTHER_CPU=n
CONFIG_HARDLOCKUP_DETECTOR=n
CONFIG_BOOTPARAM_HARDLOCKUP_PANIC=n
CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC=n
CONFIG_DETECT_HUNG_TASK=n
CONFIG_DEFAULT_HUNG_TASK_TIMEOUT=40
